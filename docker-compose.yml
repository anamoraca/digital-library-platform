
services:
  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eureka-server:latest
    ports:
      - "8761:8761"
    # Ako imaš Actuator u Eureka serveru, promeni URL u /actuator/health
    healthcheck:
      test: ["CMD-SHELL", "bash -lc '</dev/tcp/127.0.0.1/8761'"]
      start_period: 30s
      interval: 5s
      timeout: 3s
      retries: 12
    restart: unless-stopped

  gateway-api:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    image: gateway-api:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      graph-service:
        condition: service_started
      timeseries-service:
        condition: service_started
    ports:
      - "9003:9000"   # PODRAZUMEVAM da gateway sluša na 9000 u kontejneru
    restart: unless-stopped

  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jpass
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1g
      - NEO4J_dbms_memory_pagecache_size=512m
    ports:
      - "7474:7474"   # Neo4j Browser
      - "7687:7687"   # Bolt
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7.6
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=nais
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=nais_org
      - DOCKER_INFLUXDB_INIT_BUCKET=nais_bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana

  graph-service:
    build:
      context: ./GraphDatabaseService
      dockerfile: Dockerfile
    image: graph-spring-example:latest
    depends_on:
      eureka-server:
        condition: service_healthy
      neo4j:
        condition: service_started
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_NEO4J_URI: bolt://neo4j:7687
      SPRING_NEO4J_USERNAME: neo4j
      SPRING_NEO4J_PASSWORD: neo4jpass
      # Ako želiš, možeš eksplicitno zadati i:
      # SERVER_PORT: 9050
    ports:
      - "9050:9050"   # usklađeno sa logom (Tomcat started on 9050)
    restart: unless-stopped

  timeseries-service:
    build:
      context: ./TimeseriesDatabaseService
      dockerfile: Dockerfile
    image: timeseries-example:latest
    restart: on-failure
    depends_on:
      eureka-server:
        condition: service_healthy
      influxdb:
        condition: service_started
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_INFLUX_URL: http://influxdb:8086
      INFLUX_ORG: nais_org
      INFLUX_BUCKET: nais_bucket
      INFLUX_TOKEN: my-super-secret-auth-token
    ports:
      - "8082:8082"

  book-saga-service:
    build:
      context: ./BookSagaService
      dockerfile: Dockerfile
    image: book-saga-service:latest
    depends_on:
      eureka-server:
        condition: service_healthy
      graph-service:
        condition: service_started
      timeseries-service:
        condition: service_started
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      # Graph sada sluša na 9050 unutar mreže
      APP_GRAPHBASEURL: http://graph-service:9050
      APP_TSBASEURL: http://timeseries-service:8082
    ports:
      - "8085:8085"
    restart: unless-stopped

volumes:
  neo4j_data:
  influxdb-storage:
  grafana_storage:
